# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md

pr:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md

variables:
  majorVersion: 1
  minorVersion: 0

name: $(majorVersion).$(minorVersion).$(Rev:r)

jobs:
- job: Build
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - script: dotnet build
    displayName: 'dotnet build'

- job: Publish
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack'
    inputs:
      command: 'pack'
      configuration: 'release'
      packagesToPack: 'LiquidState/*.csproj'
      verbosityPack: 'normal'
      versioningScheme: byBuildNumber

  - task: PublishBuildArtifacts@1
    displayName: 'publish build artifacts'
    inputs:
      artifactName: 'Packages'

  #- task: DotNetCoreCLI@2
  #  displayName: 'dotnet push'
  #  inputs:
  #    command: 'push'
  #    nuGetFeedType: 'external'
  #    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
  #    publishFeedCredentials: 'nuget'

  - task: NuGetCommand@2
    displayName: 'NuGet push'
    inputs:
      command: 'push'
      nuGetFeedType: 'external'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
      publishFeedCredentials: 'nuget'
